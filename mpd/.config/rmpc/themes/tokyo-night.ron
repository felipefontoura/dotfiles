#![enable(implicit_some)]
#![enable(unwrap_newtypes)]
#![enable(unwrap_variant_newtypes)]
(
    default_album_art_path: None,
    show_song_table_header: true,
    draw_borders: true,
    format_tag_separator: " | ",
    browser_column_widths: [20, 38, 42],
    background_color: "#1a1b26",
    text_color: "#c0caf5",
    header_background_color: "#16161e",
    modal_background_color: "#16161e",
    modal_backdrop: false,
    preview_label_style: (fg: "#e0af68"),
    preview_metadata_group_style: (fg: "#e0af68", modifiers: "Bold"),
    tab_bar: (
        enabled: true,
        active_style: (fg: "#15161e", bg: "#7aa2f7", modifiers: "Bold"),
        inactive_style: (fg: "#565f89"),
    ),
    highlighted_item_style: (fg: "#7aa2f7", modifiers: "Bold"),
    current_item_style: (fg: "#15161e", bg: "#7aa2f7", modifiers: "Bold"),
    borders_style: (fg: "#27a1b9"),
    highlight_border_style: (fg: "#7aa2f7"),
    symbols: (
        song: "S",
        dir: "D",
        playlist: "P",
        marker: "M",
        ellipsis: "...",
        song_style: None,
        dir_style: None,
        playlist_style: None,
    ),
    level_styles: (
        info: (fg: "#0db9d7", bg: "#1a1b26"),
        warn: (fg: "#e0af68", bg: "#1a1b26"),
        error: (fg: "#f7768e", bg: "#1a1b26"),
        debug: (fg: "#9ece6a", bg: "#1a1b26"),
        trace: (fg: "#bb9af7", bg: "#1a1b26"),
    ),
    progress_bar: (
        symbols: ["[", "-", ">", " ", "]"],
        track_style: (fg: "#1e2030"),
        elapsed_style: (fg: "#7aa2f7"),
        thumb_style: (fg: "#7aa2f7", bg: "#1e2030"),
    ),
    scrollbar: (
        symbols: ["‚îÇ", "‚ñà", "‚ñ≤", "‚ñº"],
        track_style: (),
        ends_style: (),
        thumb_style: (fg: "#7aa2f7"),
    ),
    song_table_format: [
        (
            prop: (kind: Property(Artist),
                default: (kind: Text("Unknown"))
            ),
            width: "20%",
        ),
        (
            prop: (kind: Property(Title),
                default: (kind: Text("Unknown"))
            ),
            width: "35%",
        ),
        (
            prop: (kind: Property(Album), style: (fg: "#a9b1d6"),
                default: (kind: Text("Unknown Album"), style: (fg: "#a9b1d6"))
            ),
            width: "30%",
        ),
        (
            prop: (kind: Property(Duration),
                default: (kind: Text("-"))
            ),
            width: "15%",
            alignment: Right,
        ),
    ],
    components: {},
    layout: Split(
        direction: Vertical,
        panes: [
            (
                pane: Pane(Header),
                size: "2",
            ),
            (
                pane: Pane(Tabs),
                size: "3",
            ),
            (
                pane: Pane(TabContent),
                size: "100%",
            ),
            (
                pane: Pane(ProgressBar),
                size: "1",
            ),
        ],
    ),
    header: (
        rows: [
            (
                left: [
                    (kind: Text("["), style: (fg: "#e0af68", modifiers: "Bold")),
                    (kind: Property(Status(StateV2(playing_label: "Playing", paused_label: "Paused", stopped_label: "Stopped"))), style: (fg: "#e0af68", modifiers: "Bold")),
                    (kind: Text("]"), style: (fg: "#e0af68", modifiers: "Bold"))
                ],
                center: [
                    (kind: Property(Song(Title)), style: (modifiers: "Bold"),
                        default: (kind: Text("No Song"), style: (modifiers: "Bold"))
                    )
                ],
                right: [
                    (kind: Property(Widget(ScanStatus)), style: (fg: "#7aa2f7")),
                    (kind: Property(Widget(Volume)), style: (fg: "#7aa2f7"))
                ]
            ),
            (
                left: [
                    (kind: Property(Status(Elapsed))),
                    (kind: Text(" / ")),
                    (kind: Property(Status(Duration))),
                    (kind: Text(" (")),
                    (kind: Property(Status(Bitrate))),
                    (kind: Text(" kbps)"))
                ],
                center: [
                    (kind: Property(Song(Artist)), style: (fg: "#e0af68", modifiers: "Bold"),
                        default: (kind: Text("Unknown"), style: (fg: "#e0af68", modifiers: "Bold"))
                    ),
                    (kind: Text(" - ")),
                    (kind: Property(Song(Album)),
                        default: (kind: Text("Unknown Album"))
                    )
                ],
                right: [
                    (
                        kind: Property(Widget(States(
                            active_style: (fg: "white", modifiers: "Bold"),
                            separator_style: (fg: "white")))
                        ),
                        style: (fg: "dark_gray")
                    ),
                ]
            ),
        ],
    ),
    browser_song_format: [
        (
            kind: Group([
                (kind: Property(Track)),
                (kind: Text(" ")),
            ])
        ),
        (
            kind: Group([
                (kind: Property(Artist)),
                (kind: Text(" - ")),
                (kind: Property(Title)),
            ]),
            default: (kind: Property(Filename))
        ),
    ],
    lyrics: (
        timestamp: false
    ),
    cava: (
        // symbols that will be used to draw the bar in the visualiser, in ascending order of
        // fill fraction
        bar_symbols: ['‚ñÅ', '‚ñÇ', '‚ñÉ', '‚ñÑ', '‚ñÖ', '‚ñÜ', '‚ñá', '‚ñà'],
        // similar to bar_symbols but these are used for the top-down rendering, meaning for orientation
        // "Horizontal" and "Top"
        inverted_bar_symbols: ['‚ñî', 'üÆÇ', 'üÆÉ', '‚ñÄ', 'üÆÑ', 'üÆÖ', 'üÆÜ', '‚ñà'],

        bg_color: "#1a1b26", // Tokyo Night background color
        bar_width: 1, // width of a single bar in columns
        bar_spacing: 1, // free space between bars in columns

        // Possible values are "Top", "Bottom" and "Horizontal". Top makes the bars go from top to
        // bottom, "Bottom" is from bottom up, and "Horizontal" is split in the middle with bars going
        // both down and up from there.
        // Using non-default symbols with "Top" and "Horizontal" may produce undesired output.
        orientation: Bottom,

        // Tokyo Night gradient - from teal at low amplitudes to blue at mid-range to purple at high
        bar_color: Gradient({
              0: "#1abc9c",  // Tokyo Night teal for low amplitudes
             30: "#0db9d7",  // Tokyo Night cyan
             60: "#7aa2f7",  // Tokyo Night blue
            100: "#bb9af7",  // Tokyo Night purple for high amplitudes
        })
    ),
)
